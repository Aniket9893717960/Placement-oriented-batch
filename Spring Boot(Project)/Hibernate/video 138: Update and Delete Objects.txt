If we talk about Database operation we normally talk about 
Create        Read        Update        Delete

So, we talked about how do u create Resources with the help of 
  'save' and 'persist' method.
Then we have seen how do we read it with the help of
  'get' and now with update.

So, the main Question is How do we update
   So, let's go back here and let's focus on one particular
  Object.
  What can i do is i go to the database and if u observe we got
  some entries let's say i want to update the age of 'Harsh' 

Here we have given that 'age' of 'Harsh' is '21' now i want to
    know it 'Harsh' age is '23' so, we update '21' to '23' for
'Harsh' with the help of the code.

And Now using the 'session' use the method 'update' even now
this is deprecated So, now we will go for JPA and the 
method of 'session' we use is 'merge' and we have to pass the
 'object' as parameter.

             session.merge(s1);

Now what it will do is change the data from the database.
but if we check the the query 'merge' is farring with expectation 
that we got 'update' query is no it fire the 'Select' query.

we find 'select' query because 'merge' will select it then 
fatch it then update it So, 'updating' is not working because 
we doesn't have 'transaction' we are changing data from database.

    Transaction transaction = session.beginTransaction();
at last we close the transaction like this.
                 transaction.commit();

And if we verify from the output and database so, yes 
'Harsh' age is change from '23' to '21'.

           ---------------NOTE------------
If you try to 'Update' a data which is not in a table then it will change the 
Query from 'Update' to 'Insert' and insert the query.
           ---------------X---------------

             What about 'Deleting' the data?
So, this time i want to delete a particular entry So, what should be the method for
delete So, instead of 'merge' let's try 'delete'  but that is deplicated
So, instead of 'delete' we work on method 'remove' which takes an 'object'

In this video let's try to focus on some annotations which we can use
to customize your table Details.
Ok if u go back here the things which we have in 'Student.java'
will have all those variable like we got 'rollNo','sName'
and 'sAge' we have the name for it and the class name is 
'Student'
And if you look at the database we have the same thing here 
we got the Table name as 'Student' with small 's' but 
what if we want to change it because No buddy in java
will use 'camel cassing'.

So, here in java will go for 'snake cassing'.
whenever u want to go with different name of the columns
and tables.
How will you do that Instead of going 'Student' we were going for 
the new class and we give the name of class as 'Alien'.

in which we want to create some private variables(aid, aname, tech)
and we create some Getter's and Setter's and toString method which
carry all 3 variables.
Now we declare 'Alien.java' class as "@Entity" and Declare 'aid' as
Primary key with the help of '@id'

This is the Program of 'Main.java'.

  import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

// we start work on this main From Video no 139

public class Main {
    public static void main(String args[]){
        Alien a1 = new Alien();
        a1.setAid(101);
        a1.setAname("Navin");
        a1.setTech("Java");

        SessionFactory sf = new Configuration()
                .addAnnotatedClass(org.aniketdb1.Student.class)
                .configure()
                .buildSessionFactory();

        Session session = sf.openSession();


        Transaction tx = session.beginTransaction();

        session.persist(a1);

        tx.commit();
        session.close();
        sf.close();

    }
}

This is the  Program of Alien.java

package org.aniketdb1;

import jakarta.persistence.*;

@Entity
@Table(name="alien_table")   //It will also only change the table name
public class Alien {

    @Id
    private int  aid;
    @Column(name="alien_name")   // Change the column name
    private String aname;
    @Transient          // If any Column element u want to not store in database only use byDefault this will helfull
    private String tech;

    public int getAid() {
        return aid;
    }

    public void setAid(int aid) {
        this.aid = aid;
    }

    public String getAname() {
        return aname;
    }

    public void setAname(String aname) {
        this.aname = aname;
    }

    public String getTech() {
        return tech;
    }

    public void setTech(String tech) {
        this.tech = tech;
    }

    @Override
    public String toString() {
        return "Alien{" +
                "aid=" + aid +
                ", aname='" + aname + '\'' +
                ", tech='" + tech + '\'' +
                '}';
    }
}

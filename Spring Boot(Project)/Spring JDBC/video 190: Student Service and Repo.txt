Now here we create 'StudentService' then u have to make sure that this class
will belongs to different package let's say 'Service' package then we have to 
also create that package.
So, u can see we got the service package and now in that, we have a file
called 'StudentService'. Basically in this i want a method which says
'addStudent'.So, when we talk about this program method.

They should belongs to that particular class And for that, what i will do is
i will create the object for 'StudentService' in "SpringJdbcExApplication".
Now instead of creating the object by overselves we should be asking the 
context to give you the Bean for 'StudentService.class'.
CODE:
     StudentService service = context.getBean(StudentService.class);

But this will not work because on 'StudentService', we are not using a
annotation. So, which one we should use? so, of course we should use
"@Component" but here i want to use '@Service' because this is a 
'Service' class.

Now if u go back to "@SpringJdbcExApplication" we simply say 
"service.addStudent" but unfortunately we don't have this method in the 
'service' class.
See in the service class we have multiple methods Not just for storing 
data in database because the actual code for data in database will be
done in 'repository'.

Apart from those methods for 'declutter' we have some more methods as 
well.If u want to say :
"Find a student who got a marks more than this or that or any processing
you want to do on students."
But to keep it simple i want just to add Student with the help of 
"service.setStudent(s);" command.

So, i will say create a method called 'addStudent' And at this point
I will simply print Added. That's all Nothing fancy. Just say added
student as of now. So, i will say create a method called 'addStudent'.
And at this point we just simply print 'Added'.
CODE
package com.aniket.SpringJDBCEx.service;

import com.aniket.SpringJDBCEx.model.Student;
import org.springframework.stereotype.Service;

@Service
public class StudentService {
  public void addStudent(Student s){
      System.out.println("Added");
  }
}

Let's see till this point things are working out So, i always believe 
that when you do something. If we run this program then we got an 
Excaption name:
   "There is no Scope registered from scope name 'Prototype'"
It look like we done a mistake while writing "Prototype". Then,
again we run the program and we got output.

So, at least we are able to call this 'addStudent' but then don't you 
think "addStudent" should be done on the next layer which is repository.

So, what i will do is i create another class here And i will call as 
"StudentRepo" of course u can say repository but i love to things
short. And i want to keep this inside the 'repo' folder.
                    -------------NOTE------------
U can also say 'repo' as 'DAO' package.
                    ---------------X-------------
Now what i want to do is i want to have that methodb which is addStudent.
So basically, first of all, if i want to use the repository, I want to 
create repository here  i will sayed 'private repo' for this i need getter's and setter's And since i want 'setRepo' as autowired 
i will declared it.
CODE:
package com.aniket.SpringJDBCEx.service;

import com.aniket.SpringJDBCEx.model.Student;
import com.aniket.SpringJDBCEx.repo.StudentRepo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class StudentService {
    private StudentRepo repo;

    public StudentRepo getRepo() {
        return repo;
    }
    @Autowired
    public void setRepo(StudentRepo repo) {
        this.repo = repo;
    }

    public void addStudent(Student s){
      System.out.println("Added");
  }
}
But if u make it work then have to add '@Repository' annotation
at the top of "ServiceRepo". And instead of write "Added" in
"addStudent" i write 'repo' because it's respojnsible to store data
in database. 

I will u se the method like save. of course u can use any 
method name But slowly we are moving towards Spring Data JPA.
Where u will be using some methods of JPA.
So, 'save' is one of the method. but unfortunately we don't have a save
method here. Because we doesn't pass any object And in 'repo' we doesn't
have 'save' method.
CODE
      package com.aniket.SpringJDBCEx.repo;

import com.aniket.SpringJDBCEx.model.Student;
import org.springframework.stereotype.Repository;

@Repository
public class StudentRepo {
    public void save(Student s) {
     System.out.println("Added");
    }
}
U can see 'Service' package doesn't have idea about what is happening in
'save' method of 'StudentRepo' class. It's Just saying

"My work is to send data or call the method of repo, I'm doing it.
I don't know what is happening behind the scene. which database we 
are working with, I have no idea. I have no idea what 'repo' has to 
done".

Now i want that 'StudentService' will give me a list all the student 
data and for this we write some commands in 'SpringJdbcExApplication'.
CODE:
     List<Student> students = service.getStudents();
     System.out.println(students);

So, after adding the value i want to fetch all the data from database
and print it here but again in the service we don't have this method
So, let's create the method in 'Service' class.
In which i ask to 'repo' to return 'repo.' in this we also use 'save'
but 'save' return only one method at a time to resolve this problem 
we use 'findAll' to get all the data. 
Again i were trying to use all the methods of JPA So, that when u go 
towards JPA You will find the same metod name. So, it will make much more sense, right?
But we doesn't have 'findAll' method in 'repo' class then we will create
it.

Final Program of This class:
                i. 'SpringJdbcExApplication.java' program
package com.aniket.SpringJDBCEx;

import com.aniket.SpringJDBCEx.model.Student;
import com.aniket.SpringJDBCEx.service.StudentService;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;

import java.util.List;

@SpringBootApplication
public class SpringJdbcExApplication {
	public static void main(String[] args) {
		ApplicationContext context = SpringApplication.run(SpringJdbcExApplication.class, args);
		Student s = context.getBean(Student.class);
	    s.setRollNo(101);
		s.setName("Navin");
		s.setMarks(78);
		StudentService service = context.getBean(StudentService.class);
		service.addStudent(s);

		List<Student> students = service.getStudents();
		System.out.println(students);
	}
}
           ii. 'Student.java' program
package com.aniket.SpringJDBCEx.model;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

@Component
@Scope("prototype")
public class Student {
    private int rollNo;
    private String Name;
    private int marks;

    public int getRollNo() {
        return rollNo;
    }

    public void setRollNo(int rollNo) {
        this.rollNo = rollNo;
    }

    public String getName() {
        return Name;
    }

    public void setName(String name) {
        Name = name;
    }

    public int getMarks() {
        return marks;
    }

    public void setMarks(int marks) {
        this.marks = marks;
    }

    @Override
    public String toString() {
        return "Student{" +
                "rollNo=" + rollNo +
                ", Name='" + Name + '\'' +
                ", marks=" + marks +
                '}';
    }
}
            iii. 'StudentService.java' program
package com.aniket.SpringJDBCEx.service;

import com.aniket.SpringJDBCEx.model.Student;
import com.aniket.SpringJDBCEx.repo.StudentRepo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class StudentService {
    private StudentRepo repo;

    public StudentRepo getRepo() {
        return repo;
    }
    @Autowired
    public void setRepo(StudentRepo repo) {
        this.repo = repo;
    }

    public void addStudent(Student s){
//      System.out.println("Added");
      repo.save(s);
  }

    public List<Student> getStudents() {
     return repo.findAll();
    }
}
                iv. 'StudentRepo.java' Program
package com.aniket.SpringJDBCEx.repo;

import com.aniket.SpringJDBCEx.model.Student;
import org.springframework.stereotype.Repository;

import java.util.ArrayList;
import java.util.List;

@Repository
public class StudentRepo {

    public void save(Student s) {
     System.out.println("Added");
    }

    public List<Student> findAll() {
        List<Student> students = new ArrayList<>();
        return students;
    }
}

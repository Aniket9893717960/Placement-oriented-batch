Ok so Spring JDBC works. and the way we have done is we have used H2
as a database, which is a in-memory database. But what if you want to 
use same external database.
let's say you want to use MySql or PostgreS, how we do it? So, what happens
is when you talk about H2, because we also need the dataSource there.
Now for H2 since it is a embedded database,It knows where H2 is,

But when u talk about external DBMS it will not work So, let's see
So, in my machine i already have a MySql database. It doesn't matter
which DBMS u have, you just have to change something,
Some configuration to make it work.

So, whatever u comfortable with, so, let me open MySQL And for that 
I am using 'Workbench' because that's what we have data in H2, i went
to change it. So, i would say update i should done that when  i was 
replacing '69' to '71'.

I will setting the values but any way, i'll just file update query
Now we don't have the use of 'schema.sql' and 'data.sql'. And 
now we have to perform some changes in remaining files as well.

I doesn't change anything from the 'repo' package. Even if you want to
switch your DBMS, we don't have to change our 'repo', because now where 
we are saying, hey, this is for SQL, MySql, Postgres, H2.

Now where we have maintoined that. So, no to change here. Do we need to 
change our class, our service class? Ans) No.
Do, we change our 'Main.class' of course not because of same reasons.

The only thing we have to change is your 'pom.xml'. in fact we have to 
chnage two files, but we will started from 'pom.xml'. Now in 
'pom.xml' we have to make sure that we are not using 'H2' anymore
So, i will comment below commands.
CODE in 'pom.xml':
    <dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

So, i don't want H2Dependency. So, what i want is 'MySql'.Now we make 
sure that we don't have 'H2' in your dempendency. you have 'MySql'.
Let's see if that happens so, i see if it expands by external libraries.
U can see i do have 'mysql' here.

So, our job is done we have added 'Postgre' now But it will work
let's see what error will u get if we right click and run this program.
if we expand the error name "Application Failed to start". but why?

It says the "Url" of DataSource is not specified. because when we used
like embedded database(like H2, Derby) we got all the configuration
and it works by default.
But since we are not using H2, we are using a external database, we 
have to set this URL.

Now, if you remember when we talked about JDBC, normal JDBC, at that 
point, we have to configure certain things. we have to mention the URL,
username, password and driver. 
Remember the same thing you'll be doing here, but how? of course I don't
want to change my 'repo' class because it will not make any sense.

If u want an extra configuration then you can use XML configuration, a
separate file. U can create a bin for DataSource, or you can use the
configuration class to achieve that. 

The simple way is go to your resources. there's one file called 
"application.properties". So, if you wanted to specify some properties,
mention that here. As soon as your application loads, it'll look at this
file. By saying ,okay, I can see some sonfiguration there, I can see some
properties set.let me use them:

So, we can change the properties. So, what are the properties we have to 
change?
1. we have to change URl, So by default, the URL when we had H2. was for
the H2 database, but now we have to change it. But what is this URL?
So, URL belongs to "spring.datasource.url".
CODE FOR "application.properties":
                   spring.datasource.url

When u wrok with postgres and any jdbc it start with 
"jdbc:postgresql://localhost:5432"

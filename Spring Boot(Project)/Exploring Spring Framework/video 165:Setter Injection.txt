Now we will talk about Setter Injection
So, basically we focusing on different Injection techniques. But 
what is injection the things is we talk about the created class
'Alien' class.
we have one variable here 'age' what can i do is we make it 'private'.
we done transfer of data with the help of 'Getters' and 'Setters'
we can done that after the constructor not before the constructor.

Now to get the getter method we use 'obj.setAge()' we can set the 'age'
as '21' And to print/get the value we use 
         System.out.println(obj1.getAge());
of course u will get the value which is '21'.

But what if i don't want to assign the value in 'obj1.setAge(21)' let's
say we commit this line And we got this value '0'.

      <bean id="alien" class="org.aniket.Alien">
          <property name="age" value="21"></property>
      </bean>
What i think is when we assign directly to an 'age' let's go to setter 
and say to print "Setter called"

It will first create the object call the setter method So, basically u 
will create the object put at into container.
This is called the Setter Injection. when u click the setter.

This is the program
  i. 'Main'.java
package org.aniket;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class App 
{
    public static void main( String[] args )
    {
                ApplicationContext context = new ClassPathXmlApplicationContext("spring.xml");
                Alien obj = (Alien) context.getBean("alien");
                obj.setAge(21);
                System.out.print(obj.getAge());
                obj.code();
        }
    }

  ii. 'Alien' '.java'
package org.aniket;

public class Alien {
    private int age;
    public Alien(){
        System.out.println("Object Created");
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        System.out.println("Setter called");
        this.age = age;
    }

    public void code() {
        System.out.println( "Coding" );
    }
}

  iii. 'spring.xml'
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--    <bean id="alien" class="org.aniket.Alien" scope="prototype"></bean>-->
    <bean id="alien" class="org.aniket.Alien">
        <property name="age" value="21"></property>
    </bean>
    <bean id="lap" class="org.aniket.Laptop"></bean>
</beans>

  iv. 'Laptop.java'
package org.aniket;

public class Laptop {
    public Laptop(){
        System.out.println("Laptop Object Created");
    }
}

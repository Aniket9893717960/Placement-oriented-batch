Now let's create a Controller which can accept this request.
Because if u see the 'HomeController'. Of course we can create a new 
controller here, a new class, but then Spring allows u to have multiple
controllers in one controller.

So, may i Spring allows u to have multiple requests mapped in one 
particular controller. and logically, if u have different types of 
controllers, let's say u have different types of requests.

So, if u are making an e-commerce website and u want to request for user,
so user addition, or maybe adding a user, deleting a user, or updating
a user, so every thing that deals with the user, u can put that in one
controller.

Maybe u can have the controller for products where u can add a product,
remove a product, remove a product, update a product. u can have a 
controllers for the orders, place the order, delete the order, change 
the status of the order.

So, u can have that in the OrderController. But here, since we only have 
two controls now, let's work with the same 'HomeController'. what i will
do is? if u want to have something that will accept the request,
u have to create another method.

So, at this point, i will say 'public' String because maybe I want to 
return a page, of course, right? when u add two numbers, u also want a
page, and that's what u're expecting in the browser.

So, if u see in the output, when u send this request, this should be
another page. Okay, so that means I have to return something, and 
then we can have a method name.

Mathod name can be anything.I will say 'add' here and open bracket close.
close brackets below is the code.
CODE IN 'HomeController'
                      public String add(){}

Okay now here I want to return the name of a page. So, what's should be
the name of the page? I will simply say return. when can return any page
name. I will say return 'result.jsp'.
CODE IN 'HomeController'
                      public String add(){
                            return "result.jsp";
                      }

But then will it be getting called? Of course not. So basically, we
have to map it. Now how do u map it? of course for mapping, we can use
@RequestMapping. And then in bracket, we can mention the URL. The URL
Of this is 'add', because if u see on the 'homepage'. we are saying,
"This is my website name",and this is the URL,"the URL path basically",
That's what we have to mention. This is for the 'add' request,
CODE IN "HomeController"
                      @RequestMapping("add")
                      public String add(){
                            return "result.jsp";
                      }
Is it really work? to check this let's re run the program. But we got
an error after clicking to 'submit' button. It may not be able to find 
it, 
                IS the mapping Happening?
maybe it's happening it is searching for 'result.jsp'. Not able to find 
it the 'result.jsp'. To prove that or to check that, we can say "in add"
in 'println' just to see if this is working.
We know we always go step by step Otherwise, we are not sure at what 
point we got the error. So, i just saying "in add" now.
We got Yse, we are able to call 'add' method in "HomeController".
But know, it's not about to just calling this, right?

     DO WE HAVE 'result.jsp' IN THE FILE, OR WE DON'T YET?
So let me create a file or maybe I will just copy-paste this 'index.jsp'
here with differnet name 'result.jsp'.

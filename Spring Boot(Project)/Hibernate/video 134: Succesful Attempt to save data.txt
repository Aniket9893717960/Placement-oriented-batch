Now let's create the 'configuration' now how we can do it.
Do we have a way of 'xml' and 'annotation' Now we will start with 'xml'
and we do certain things with that letter on we see what if we don't want
to use 'xml' how we can do that with annotation.

But Now let's work with 'xml' we know that we have the folder here name
'resources' where u put all the xml files and 'resources'. So, we have
to put something there the movement u write 
        'Configuration cfg = new Configuration();' line.
This know that u have to find the 'Configuration' somewhere and u do that  
with the help of 'cfg.configure()' when u call this method then
this actually loads the 'xml'.
But unfortunatly u don't have the xml let's we see that we got an Error
Let we run this so yes we got an exception name 
       "Could not locate cfg.xml resources (hibernate.cfg.xml)"
                                               |- This is the by Default name.
We have to build different names but u have to put that here if we don't want
to do that then go with different thing.
This resources will create the new file int 'resources' package with name as
'hibernate.cfg.xml' because that's what the console says here.

The first thing u need is 'hibernate configuration' tag and this is coming from this
doc type here and in this u were getting the 'session-factory' tag in this u were 
get by default now in this 'session-factory' tag.
U have to maintoined certain properties so, let's maintoined the first property is:

i. name = "hibernate.connection.driver_class" under the 'property' tag opening
and closing we write "com.mysql.jdbc.Driver".
ii. u have to maintoin the url right with name is:
    name = "hibernate.connection.url" under the 'property' tag opening
and closing we write "jdbc:mysql://localhost:3306".
iii. name = "hibernate.connection.username" under the 'property' tag opening
and closing we write "<Given UserName>".
iv. name = "hibernate.connection.password" under the 'property' tag opening
and closing we write "Given Password".

Now if i run the Program then  we got the different error.
          'unable to locate persistent: com.telusko.student' it means that compiler 
will able to load the 'configuration' but i am not able to find the class or persist the class. But u say "hey there is a class here why u are not able to persist because it's a normal class"
Hibernate say of if u want to to map those classes we have to add the 'configuration'
so, u can do that here with the code or u will do that in the 'xml'.

So, we return to 'Main.java' file and write at the next line of 'Configuration' is
'cfg.' after u check that u see multiple methods at which u have to chose one method
So, we chose 'addAnnotatedClass' in which we have to define the url of 'Student' class like this:

        Configuration cfg = new Configuration();
     cfg.addAnnotatedClass(com.telusko.Student.class);
                  cfg.configure();

If we want that "Hibernate" will manage the 'Student.java' then we have to use 'Annotations' this is the first time that we use 'Annotation' First we use :

i. @Entity : It specify that this class need to be Represented in the database
             And Hibernate will take care of it.

But if u observe that input is not from the 'Hibernate' this will be from 
'jakarta.persistence'. Now the Question is :

          -----------------------X-----------------
               What is 'jakarta.persistence'?
So, this is JPA Initially this will called 'Java Persistence API'. And now this will called 'Jakarta Persistence API'. It's just that there are allot of ORM tools in the 
market 'Hibernate' is not the only one And every ORM tool have there own way of doing things. 
And this is how the problem started that 'hey u know we just have some standards that all the ORM should follow'.
That's why we got the standards name 'JPA' and the ORM tools will implement it.
That every one on the same page.
          ----------------------X--------------------
Atleast similar not same And that's why we go with the JPA 'Annotations'.
          After we run this program now we got different error Not same:

We say Entity 'com.telusko.Student' has no identifier.
              TO resolve this 'Exception' on the top of 'rollNo' in class
'Student' i write '@id' By this we are saying is 
'hey in this we have multiple variables this 'rollNo' is the primary Key.
For the table.'

Now it should be happy let's re run this So, Yes finally there is no Error
OOSUMM But let me check that the changes we are trying to done is save in database
or not But I sorry to say 'It's Empty'.
Things are not working the way we want it. Some thing is messing but main Question is
What?.
                    U know that what we are trying to do here is 
                       We want to save data.
                    --------------------------------------------
Go back the database principal that we got the asset property. So, every time u 
save data is the transaction.
Let's say 'U were saving the data That means u were doing transaction. Or
After transaction u have to commit the transaction.' Otherwise it will not
save that means we have to commit it.

How do we commit it it's very simple Sorry Difficult to cummit but u are saying 
'commit'. So, 'Commit' will belongs to transaction so, before u commit it.
U will create the object of 'transaction' From 'Hibernate' package let me say
it's name is 'transaction'.
But how will u got the object of transaction because the 'Transaction' itself is
an 'Interface' in 'Session' we have the method called
'beginTransaction' and it returns the object of 'Transaction'. And it will say the
object of 'transaction'.
               All the changes will be done at 'Main.java' file.

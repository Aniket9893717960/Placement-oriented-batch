      Sequence Of Characters
      ----------------------
There are Different type of method to create a String.
i. Example :
   ---------
            let name = 'Love
            Babbar This is my
            Name hello';
            console.log(name);
ii. Example :
    --------- 
         let firstName = new String("Love babbar");
          console.log(firstname);

   We can Perform So many Operations on String which are written as Follows
   ------------------------------------------------------------------------
i. ConCatination : Merging Two string into a Single String.
   --------------
ii. Substring : How to fatch out the small Part of String.
    ---------
iii. length : How to calculate 'length' of the String.
     -------
iv. UpperCase : How to convert letters to Capital Letters.
    ---------
v. LowerCase : How to convert letters to Small Letters.
   ---------
vi. charAt : How to take specific character in a String.
    ------
vii. indexOf : How to find Location of a Specific Character in a String.
     -------

         We will Descuss all the Utility in this lec.
      -------------------------------------------------
        i. Concatination
        -----------------
There are different type of methods for Concatination
a. Use of '+' operator for Concatination
  ----------------------------------------
Example :
         let op1 = 'English ';
         let op2 = 'Hindi ';
         let ans = op1 + op2;
         console.log(ans);
b. Using String interpolation with template literal(' '):
   ------------------------------------------------------
Backtracking allow for String interpolation, where we can embed 
expressions with '${}' inside the string, which are then evaluated
and Concatenated into the string.
Example :
         let op1 = 'English ';
         let op2 = 'Hindi ';
      let finalAns = '${op1}${op2}';
       /*  let finalAns = '${op1} + ${op2}'; */ //But if we doesn't want '+'
                                              on console Screen 
/* let ans = 'op1 + op2'; *///It will as it is value which we don't try to done
         console.log(ans);

       ii. Substring
          -----------
In Javascript. the substring() method is used to extract a portion
of a string, starting from a specified index position to another
specified index position, or to the end of the String.

Syntax :
             'string.substring(startIndex, endIndex);'
* startIndex : The index position at which to begin extract
               Ing character from the string.
   This Parameter is required.
* endIndex : The index position before which to end of Extraction.
             If we don't maintoin the 'endIndex' then,
The substring() extracts characters to the end of the String.

Example :
          let str = 'Babbar';
          console.log(str.substring(2,4));
       // It will print characters Between start from 2nd position
          and End with 5th position 
                Output is : 'bb'
          console.log(str.substring(2));
       // It will print all the character after the 2nd Position
          of 'String' Gives Output : 'bbar'

      iii. Split method on Strings
           ------------------------
In javascript, the split() method is used to split 
 a String into an array of Substrings based on a specified 
separator.

Syntax :
-------
         String.split(separator);
          Where 'separator' : is a String or regular expression
       Used to specify where to split the original string.
The output is the array of substrings.

Example :
-------
       let sentence = "Hello jee kaise ho saare";
       let words =  sentence.split(' ');  
       console.log(words);
Output here is 
         ['Hello','Jee','Kaise','Ho','saara']
          ------------------------NOTE---------------
In            'sentence.split(' ');  '            
You doesn't use '\' sign here. If you ignore the warrning and 
run the program U got error name 'Unterminated String Lateral'
Because To Understand the reason First you have to Know
                What is the Use of '\' Symbol?
Example : To to print double coat("") at the console Screen
              let sentence = "HelloJee "Kaise" Ho Saara";
                                       -------> If you want to print  "Kaise" then
                                                 Use '\' at corners of   ^ .
              let sentence = "HelloJee \"Kaise\" ho saara";
              console.log(sentence)
 ---NOTE--
If you want that 'String' will forgot the meaning of '\' For
a certain case You will use this Example.
 ----X----
           If you want to Use any how Doesn't matter How you Do of '\' Symbol?
U can use this command
                let words = sentence.split('\\');
'\' to treat this as Normal Back slesh Not Special Back slesh.
           -------------------------------------------------


           iv. Join Method on strings
           ---------------------------
In javascript, the join() method is used to concatenate all the elements of an 
array into a single string.
                     This method joins array elements using a specified 
separator and returns the resulting string.
Syntax :
--------
         array.join( separator )
                         |- Here in join method Using the separator 
string is optional. The string used to separate each element of the 
array when they are concatenated into the resulting string.
Example :
---------
          let sentence = "Hello \\jee \\kaise \\ho \\saare";
       let words =  sentence.split('\\');  // Got output like this
console.log(words.join(','))        |-> ['Hello','Jee','Kaise','Ho','saare']
                     |-> Here we got output: Hello ,Jee ,Kaise , Ho, saare         
       console.log(words);

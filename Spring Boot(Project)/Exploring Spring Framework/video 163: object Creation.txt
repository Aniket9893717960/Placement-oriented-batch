When we will create the object of 'Alien'. Here we is "Spring" And "I".
Here we try to solve the question is 
"when exactly spring creating the object in spring container." So,
i am gessing there are two places.
i. it's happening at line no. 9
ii. it's happening at line no. 10

So, i want u to think about this And whenever u want to answering it
may be in the comments. where u comment something on this place.
On which line u were creating the object.

I hope u made answering up your answer let's understand this let's
find it. Just ask spring and 'Main.java' code
"when exactly u were creating the object."

To do that what i will do is i will go back to my 'Alien' class.
bacause that's where the magic is happening This is the class of which
u creating an object.

what i will do here is we creating an constructor because every time
u creating an object we call a constructor.
In 'Alien' we create an no - argument constructor.
  public Alien(){
    System.out.println("Object Create");
  }

Ok so of course when u run this code now It will print object created
There is no second question on that If we run the program
we will got the output.
Now the question us where it's actaully happening Now 
i commented below 2 lines and see what happends

                Alien obj = (Alien) context.getBean("alien");
                obj.code();

If u run the program then u got that 'Alien' contructor is running
perfectly.
           -----------NOTE----------------
    ApplicationContext context = new ClassPathXmlApplicationContext("spring.xml");
This will create the object with the help of 'Spring.xml'.

    Alien obj = (Alien) context.getBean("alien");
        obj.code();
U are not creating an object u just calling an object and refering and
object. when u say 'getBean' we refree the object to 'obj'.
And when u say 'obj.code()' we basically working with that object to call
the container.
          ----------------X---------------
If i can create one more class name 'Laptop' in which assign the 
no argument constructor to basically print 'Laptop Object Created'.
  public Laptop(){
    System.out.println("Laptop Object Created");
  } 
And if u run the main program. Console will not print 'Laptop Object 
Created' because 'spring.xml' will not have any kind of information of
'Laptop'.
      <bean id="Lap" class= "com.telusko.Laptop"></bean>
                --------------NOTE------------
      <bean id="Lap" class= "com.telusko.Laptop"></bean>
We will create the 'xml'(Above code) object multiple times for the same 
class.
                ----------------X-------------

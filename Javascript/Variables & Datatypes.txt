If we talk about any programming language like
C++, Java, Javascript in this all languages
it's compulsory to work on the data.

We have so many Data stucture which store data.
The different data structure will have different 
methods/techniques or return to fatch data 
techniques is different.

If we talk about Data handling and Storage
so, Variables are something which is very 
    ---------
important thing.

A simplest entity to store the data are variables
without confusing 'Variable' term we make it's
meaning in simplest form then
Variables are Named memory Locations.
              ----------------------
              if we store different data's in variables
              It will take Different space some data take
              space of 4 byte,some are 8 bytes and many more

In the memory if you have to identify some data uniqely
It only possible when u have to identify with the 
help of address.
In short if you try to store any value or access any
value it only done with the help of address.

To make the easy technique of storing or access with the
help of Address. With the help of 'Variables' u will give
name to the location('age' name given in this case).

This will have some variable names are :
i. var      ii.let         iii.const
and any more.

Let say we use a command.
              'let age = 25;'
where 'let' is dynamically type datatype
       'age' is a name of the variable.
    ' 25 ' is a constant

But as u know we have 3 datatypes which are used 
Exactly similar.
Example :
         -------------
          var a = 50;    ---> why It's totally Stoped to use?
          let a = 60;
          const a = 70;
          --------------
The main Question is what is the Difference between
this 3 data type.

                   Var Keyword
                   ------------
This are the traditional way of declaring variables in 
'Javascript'. Variables declared with 'var' are function 
scoped or globally - scoped but not block - scoped.

Means variables declared with 'var' are hoisted to the
top of their function or global scope.
The hoisting behaviour can sometimes lead to 
unexpected results and make debugging challenging.

         ---------------NOTE--------
if 'var' will be Not in the specific function than it becomes 
'Global' and we access it throw out the file.
'var' keyword is Bracket scoped.
                 ---------------
             Commit : JavaScript comments can be used 
to explain JavaScript code, and to make it more readable.
       -----------------------------

Now we make a program in which we make a 'function' name 'solve'
which have 2 commands in which 1st command is 
             'var age = 25;'
at which we have to initailize the a constant('25' in this case) in
variable name 'var'.

2nd command is to print variable 'age' on the console screen with the
help of this command.
             'console.log(age)'
This is the full program :
             function solve() {
             var age = 25;
             console.log(age)
              }
But if we run this program it doesn't run because 
we desn't call the function so we call it with 
the help of this command.
           'solve' outside the function

              There are 2 issues in 'var' keyword 
                  are as follows
                   ---------------------
i. As u know 'var' keyword are Globally available
    so, it will create problem in throw out debugging.
  That why developers try to avoid 'var' keyword.

ii. we build duplicate 'variable' for same name in
    same file But it's confusive for you in debugging 
    the program.

            ------------------NOTE-----------
'var' has some quirks and drawbacks, especially related
to variables hoisting and it's lack of block scope.
Due to these issues, 

'let' and 'const' were intoducad in ES6 (ECMAScript 2015)
to provide better variable scoping mechanisms.

It's generally recommanded to use 'let' and 'const'
instead of 'var' in modern Javascript code,
unless there's a specific reason to use 'var'.
           -----------------X------------

                       'let' keyword
                       --------------
With the help of 'let' i will create a variable like
                'let age = 10;'
but Every variable which was created by 'let'
those variables become Block scoped.
                       -----------

'Block Scoped' means AT which two brackets(open-closed) you want 
the variable it will only accesed within brackets.
Example :
If you created a program
           console.log(a);
           {
           let a = 10;
           }
This program gives error name 'ReferenceError: a is not Defined'
because 'console.log' because it doesn't in braces'{}' Not matter
             'who is the owner of this berces'.
            ------------------NOTE-----------
Throw this we solved the first problem of 'var' keyword.
ii. Redefination Issue :
    ------------------  'let' doesn't allow to Re - define
the same variable name in same file.
 -------------------------------------------------------
Feature :
---------       Dynamically Typed Language
Example:       let x=10;
              x = "Mayank";
              x = true;
              x = null;
             console.log(x);
What happend in this program is we redefined the 
Variable value from 'integer' to 'String'
'Boolean' and 'Null variable'
We print it's value on console screen.
It's just simply run because of it's 
Dynamic nature.

                  'const' keyword
                  ----------------
It's a solution of 
'Re-assignment & Re-Declaration'problem because 
if u will initalize it's value for the first time
then it's value becomes fixed.

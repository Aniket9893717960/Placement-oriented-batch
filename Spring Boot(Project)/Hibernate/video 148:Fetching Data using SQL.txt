let's implement SQL But before we do that first 
we have to make certain changes which we are working on
  So, first of all i need the simple class. Yes we got 'alien'
  we got 'laptop' but let's say we work with new the term laptop
  even laptop is new for us.
  because laptop is a very simple class we got an 'lid','brand',
  'model' and 'ram'.

And if you look at the data for this So, let's open our 'admin'
  'pg.admin' and if u see the data for the 'laptop' basically we
  got this 3 Details
So, what can i do is i will go back to my code and in this i want
to check one more thing. I don't want to be 'create' now in
'hibernate.clg.xml' this time i write 'update' otherwise i loose 
my data.

Program write on 'Main.java' Is:

public class Main {
    public static void main(String args[]){

        Laptop l1 = new Laptop();
        l1.setLid(5);
        l1.setBrand("Asus");
        l1.setModel("Strix");
        l1.setRam(32);

        SessionFactory sf = new Configuration()
                .addAnnotatedClass(org.aniketdb1.Laptop.class)
                .configure()
                .buildSessionFactory();

        Session session = sf.openSession();


        Transaction tx = session.beginTransaction();

        session.persist(l1);

        tx.commit();
        session.close();
        sf.close();
    }
}
Now what we done changes in code And this time i want to fetch the data
Now we remove all the unusual things in the 'Main.java'.

public class Main {
    public static void main(String args[]){

        SessionFactory sf = new Configuration()
                .addAnnotatedClass(org.aniketdb1.Laptop.class)
                .configure()
                .buildSessionFactory();

        Session session = sf.openSession();

        session.close();
        sf.close();
    }
}
           We use all this statement to fetch program.
So, here how do u fetch it it's very simple. If u want to fetch the laptop
details. I want a 'laptop L1' which got initialized with 
'session.get( )'
             |-> In this u have to pass what kind of data u wanna fetch.
Just like i want to fetch 'Laptop.class' and let's specify some data.
based on the primary key. And that's the only thing u can do in the 'get'
session.
Let's say i want to fetch 'lid' for get '3' and at the end u have to print
'l1' object.
        Session session = sf.openSession();
           Laptop l1 = session.get(Laptop.class, 3);
        session.close();

but i don't want to fetch only single value i want to fetch multiple values
based on the 'ram' how can i do that Now for something this we use 
Something called 'HQL'.
Or of course it's a query after a time if u work on the normal sql this
is the thing i wanna write
IN SQL    'select * from laptop where ram=32;'
IN HQL    'from Laptop where ram=32;'

to have to use we have to write something called Query.
Now where u get this So, u get this from the hibernate. If u look at the
'query'.SO, it's an iterface we doesn't can't simply create the object of
it.

'session' say don't worry u just simply say create 'CreateQuery' and we have to
pass the Query in it's brackets.
I write 'from laptop' because i doesn't want to apply filter right now.
This query means execute everything from the laptop to access.

to access it we use the method 'getResultList()' because it will give 
u a list of values.
And that's right if u click on 'getResultList()' we see 'List<R>' in
return type.

And that's the beauty if u remember JDBC U fire the query it will give u
result set and u have to manually take each value from the result set
and put that in the list of object.
for this what will it return the list of laptops whether u can diretly print 
everything or u can run for each loop U can print each value here And u can see
u got the values
This is the below command.
                      Query query = session.getQuery("from Laptop");
                      List<Laptop> laptops = query.getResultList();
If u don't want all and u want the filer data of ram '32'. then use
this command.
                      Query query = session.getQuery("from Laptop where raw=32");

Now in this case it will not give u every thing that's what i am expecting.
That's why we run this got 2 laptops.
laptop 2 and laptop 4 because this 2 have ram 32 gb.
just to confirm laptop 2 and 4 they both are 32 gb.

That's how basically u can get the data here.
Actually it's vary easy to work with hQL Just u have to create the query object
with the help of 'createQuery' whatever query u want to pass. Pass it in brackets
It will give u the data.

At this point we are saying 'from laptop' this will give u all the column data or 
properties and u can apply filter on rows not on the columns.
columns u are getting everything And that's why make sense to store that in the laptop object or the list of Laptops 

but what if u want to fetch only one or 2 laptops what will i do that let's see in
the next video.

Till this point we talk about the 'xml Configuration' and we have used 
'java based Configuration' as well. In which we have talk about 
multiple annotation like
 @Configuration  @Bean   @Primary
And with this things are working out. So, we are quite happy
So, the main question is are We?
So, the thing is when we say that spring will make your work easy 
Then we expect that 'Spring' will done things automatically.

Specially when we started with 'spring boot'. And we got to know 
that spring boot will make your work very easy. 
In spring as well without using spring boot. we get that easy part
But looking at the configuration we are not that happy.

Even if it's your 'XML COnfiguration' or your "java based Configuration".
We need to create the object below by self and inject them.
  Alien obj = new Alien();
  obj.setAge(25);
  obj.setCom(com);
  return obj;
We make to build this more easy. Now we have some more annotation which
we have used they are your "sterotype" annotation. when u talk to your
spring framework with the class metadata itself. 
So, u can maintoined in your class.
"Hey u know spring u are responsible to manage this bean".
What we mean by that is if u look at this 'Alien','Desktop' 
And 'laptop'.

U have No idea that we are using a spring framework.
And we ask to your 'Alien' class. u have to know that u have used by
spring 'Alien' itself.
Hey we doesn't have any idea because 
"No one in this file will actually want to use spring".

Look at this 'Desktop' they have no idea that they are the part of 
'Spring' Project. But what we can tail them.
hey u know u are the part of spring project. The way u can do that by 
Just GO to top of Any class let's say 'Alien'.
We write '@Component'.

                      COMPONENT
It's a sterotype annotation in spring which helps to your spring 
framework to understand that 'Alien' is a class where spring has
to manage the object for it.
Basically we have to make the manage bean to a spring. when u can 
do that with the help of Add component And all of your class 
whenever you want the object.

Example in 'Desktop' also i want the object. So, i can say add 
'Component' and for 'Laptop' as well we say "@Component"
On top of all the classes when we want the objects Just write
'Add Component'.

And u will saying what's the advantage of this:
 i. u don't have to done any configuration in your java based 
    Configuration and commit 'AppConfig' below code.
CODE:	
//	@Bean
//	public Alien alien(Computer com) //@Qualifier("desktop")
//	{
//		Alien obj= new Alien();
//		obj.setAge(25);
//		obj.setCom(com);
//		return obj;
//		
//	}
//	
//	
//	
//	@Bean
//	@Primary
//	public Laptop laptop() {
//		return new Laptop();
//	}
//	
//	
//	
//	
////	@Bean(name = {"Beast","desktop","com1"})
//	
//	@Bean
//	//@Scope("prototype")
//	public Desktop desktop() {
//		return new Desktop();
//	}
}
If we run the program then we got an error name 
"No qualifying bean of type 'com.telusko.Alien' available".
That's weared right we do have 'Alien' class we writing
'@Component' on the top of it.
What's the problem So, problem is Go back to your 'App.java'
what u are saying is we are using 
'AnnotationConfigurationApplicationContext' and the class in which 
i were doing all the configuration is 'App.java'
or 'AppConfig.class' basically.

What we will do is we go to 'AppConfig' class and say ok i got the 
configuration class but i don't created the bean here even if u write
'Component' on the top of your classes.
Spring has no idea that u are doing this because 'spring' is responsible
to check your classes. It will tall your spring.
"Hey spring u know i am not creating beans here. I just adding 
'@Component' at the top of your classes.  So, please manage it".

How we will talk to spring in that manner.What we can do is we can 
use one more annotation here which is called 'ComponentScan'.
We just saying "spring scan the component And see if they have 
Add component at the top of it".

If you find this annotation there please scan them. But the question
is where exactly the spring will search and that's where we pass
the attitute where u have to maintoined the base packages.
Just like Below program:
CODE
    @Configuration
    @ComponentScan("com.telusko")
    public class AppConfig {}
Now if we run the program we got 'Alien','Desktop' and 'Laptop' all
3 objects will created.
But we also got an error as well at the end name
"Cannot invoke "com.telusko.Computer.compile()" because "this.com" is 
null".
So, there is no problem in array object creation. the problem will occur
when u call 'compile' method.

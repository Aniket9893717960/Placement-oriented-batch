         1. Variables And Strong Typing:
            Why are Variables Important?
i. What are Variables?
 Think of variables as labeled boxes where u store things like numbers,
 words or true/false values. For Example: u store your age in a box called
 "age".

ii. Why Does Dart Use Strong Typing?
 Dart is statically typed, which means when u put something in the box,
 u must decide ahead of time what type of thing it can hold. This is like
 telling the box "You can only hold apples" rather than any random fruit.

iii. Reason:
 This helps the computer catch mistakes early. For example, if u make a
 math operation on something that isn't a number, Dart will return u before
 running the program. This saves a lot of time fixing bugs later.

         2. Functions: The Recips Cards of Programming
i. What are Functions?
 Imagine a handy recipe card that tells u how to make your favorite dish
 step by step. Functions in Dart are like these recipe cards: they define
 a set of instructions u can use whenever needed.

ii. Why Does Dart Use Functions?
 Functions help keep your code clean and reusable. Instead of repeating
 yourself, u write the recipe once and follow it many times.

 Reason:  This makes programs easier to read, understand, and maintain.
         It helps especially when programs grow big and complicated.

    3. Classes and Objects: Building Blocks of Real World Code
i. what are classes And Objects?
 Think of a class as a blueprint of making cars. the blueprint says what 
 every cars should have: wheels, doors and an engine. Each car u build 
 from this blueprint is an object.

ii. Why Did Dart Adopt Object Oriented Programming?
 Real life is full of objects - phones, animals, bools - so Dart lets u
 model these objects in your code finely.

 Reason: By using classes And objects, Dart helps Programmers organize
         code logically, making it easier to build complex apps step by 
         step.

         4. Async/Await: Managing Busy tasks Smoothly
i. What is Async/Await?
 Imagine making tea. while the tea is brewing(takes time), u don't just
 stand idle u do other tasks. Async programming in Dart does the same -
 It lets the app handle long tasks(like downloading) without freezing.

ii. Why Does Dart Have Async/Await?
 On mobile apps, waiting for slow tasks (like internet downloads) can 
 make the app freeze and annoy users.

 Reason: Async/await lets Dart write this multitasking smoothly and
         understandably. It's like saying,
         "Wait for the tea,but meanwhile, set the table."

        5. Null Safety: Avoiding Nothingness Errors
i. What is Null?
 Null means no value. Imagine asking for the color of a car, but the car 
 doesn't exist - what do u get? Nothing or null.

ii. Why Null Safety?
 In many programs, null values cause crashes if used carelessly.

 Reason: Dart introduced null safety so that when u say a variable should
         never be empty, the program knows this and warns u if u forget. 
         This stops many crashes before they happen.


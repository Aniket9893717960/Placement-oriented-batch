In this module, we'll talk about web application.
when we talk about spring as a framework, it has multiple project inside it.
So, it's a umbrella for multiple projects.
And one of the project, in fact, there are multiple projects and deals with
web application. So, if u wanted to build a web application, u can use 
something called Spring web.

And otherwise, if u don't want to use Spring boot, we also have spring MVC 
there. Now why exactly we need to build web apps? Again, that's a weird
question, right? Because we all know the answer.

the world is working on web applications. of course, you do have mobile 
applications, but then for every mobile app, okay, not every, but 99.99%
of mobile application also have a web application.

So, the back end remains same fot the front end of your desktop and 
front end of your mobile application. So, can i say that the client,
the browser client, and the mobile application most of the time having
same server.

         Mobile              Browser 
       Application            Client
           |--------------------|
                     |
                   SERVER
And we are here to focus on how do you build that server? because see,
if you talk about a client, it can be a mobile or a desktop, maybe on 
the browser you will be having a page up. On that page you want to show 
some data, right?

See, having that page is not difficult, but getting that data is 
difficult because every user will have the different data.
Now I'm talking about "Dynamic Content" here, but let's say if you
want to build a "Static Content" for all the users over the world,
you can do that with the help of HTML, CSS and you will get that 
beautiful page there.

But if you want to make it dynamic, that's where you need a beck end
programming. And one of it is 'Java' So, here we want to make sure that
every time you get a request from you client and goes to the server,
basically there should be something on the server which will accept the
request, process the request and give back to the client.

     ---------                -----------
       SERVER   <-----------     CLIENT
     ---------  ------------> -----------

Now when you say give back something to the client in nowadays we are 
talking about "DATA", only the data.
May be it is possible that the front end which you are building for a
web, it is done with the help of react, angular or a vanilla JS.

Important is the back end will send the JSON data to the client. And what
if clint wants to send data? Of course client can send data in the JSON
format.

same goes for mobile application. So if a mobile want to interact with 
the server, let's say if you want to check the current score. So, 
whatever sports you love and if you're watching a particular game and if
you don't have a time to watch a game.

But if you want to get this code, you can take your mobile phone out,
open the application now. This app will have the layout. what you 
get from the server is the data.

That means we have to generate that data from the server. Maybe this data
is coming from the database or this data is coming from some other 
server. Right it is possible.

Basically all this data passing is happening with the help of JSON data.
Now the question arise How do you build this server in Java. And that's 
where we got something called "SERVLETS".

"As the name suggests we have 'serv' and 'let'. So, basically these are 
the components the server components which will process. An in fact it 
will accept the request. It will process the request, it will send data
back to the client."

Now basically to run this servlets, you can't simply run your servlets
on JVM the way we are doing till now to run this servlets. Now since 
it has some extra features that getting the request from the internet 
and then responding.

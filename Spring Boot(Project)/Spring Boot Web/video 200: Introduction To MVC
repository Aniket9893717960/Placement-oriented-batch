So, we talked about how can we create a web application using Java.
So, basically we can use servlets to build our web application.
So, when i say web app what i'm talking about is this should be a
back end which can accept the request and reply something to the client.

And then process the request and reply something to the client. And of course
in java we don't build the front end, right. The  front end is built using 
HTML, CSS, Javascript. Or you can use something called react to build your 
front end.

Or u can also use a mobile application. or may be some other server using 
your server to get some data. Ultimately, your server is basically giving 
some data back to the client

Ultimately, your server is basically giving some data back to the client.
Now the thing is, if we talk about building a web application, of course 
we have done that with the help of servlet.

now think about it what if u want to return a data. It's very simple You can
say "hey servlet I need to get some data from the database."
So, servlet will talk to database and get your data back and say okay this
is your data. Take it back.

Now if u just want to return data it's very simple.But then we know that if
you want your client to see some data on a browser, u cannot simply send
a data right.

That's boring. u want to make it interesting and that's why u will use a 
beautiful front end, right? Now the question arise If u want to return a 
front end from your servlet, basically u have to write 
 HTML tags inside java. just like we have done in below code:
CODE OF 'HtmlServlet'.

package org.aniket;

import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;

public class HelloServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse res) 
        throws IOException {
        
        System.out.println("âœ… Servlet called!");
        res.setContentType("text/html");
        res.getWriter().println("<h1>Hello World</h1>");
    }
}

And that's where the problem starts, right? If u start adding HTML content
inside the JAVA code, what if it becomea bulky. That's where u have to find 
the solution.
            AND THAT SOLUTION IS "JSP"(Jakarta Server Pages)
                    Formally, JavaServer Pages
Now again that in java we have multiple view technologies. That's why we 
call them as "view technologies" because we create them to show to the client.
So, in servlet basically u write HTML inside Java.
 
But can we do something like "App.java" that we have done 
"Can we write a HTML page, the entire page and put the Java code in between?"
Yes, that's possible. And that's where we have something called a JSP which 
stands for "Java Server Pages". And this is not the only view technology.

There are multiple i write this at center of the list
                           Thymeleaf
                           FreeMarker
                           Groovy Markup
                           Script Views
                           JSP and JSTL

Exactly not the list But then we have multiple there. So, we can use JSP to 
create the view technology. Now coming talking about these two things we got
servlet and we got JSP.

Now servlet is responsible to accept the request from the client. And JSP
is responsible to create that beautiful page which u want. That means u 
can do your processing in servlet.

I mean, not just processing. U can accept the request from the servlet, u
can do the processing there and then once u get your data, just send that
data to JSP page And JSP will send to the client with the HTML.
